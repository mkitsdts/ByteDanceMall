version: '3.9'

services:
  mysql:
    image: mysql:8.0
    container_name: order-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: order
      MYSQL_USER: test
      MYSQL_PASSWORD: test
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:8
    container_name: order-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  kafka:
    image: apache/kafka:4.0.0
    container_name: order-kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:29093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuvwx123456
      KAFKA_HEAP_OPTS: "-Xms256m -Xmx512m"
    volumes:
      - kafka_data:/var/lib/kafka/data

  order-service:
    build:
      context: ..
      dockerfile: ./docker/dockerfile
    container_name: order-service
    ports:
      - "14803:14803"
    restart: on-failure

volumes:
  mysql_data:
  redis_data:
  kafka_data: